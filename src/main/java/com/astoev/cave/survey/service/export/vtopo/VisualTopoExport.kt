package com.astoev.cave.survey.service.export.vtopo

import android.content.Context
import android.util.Log
import com.astoev.cave.survey.Constants
import com.astoev.cave.survey.model.Location
import com.astoev.cave.survey.model.Photo
import com.astoev.cave.survey.model.Project
import com.astoev.cave.survey.model.Sketch
import com.astoev.cave.survey.service.export.AbstractExport
import com.astoev.cave.survey.service.gps.UtmCoordinate
import com.astoev.cave.survey.util.AndroidUtil
import java.io.ByteArrayInputStream
import java.io.InputStream
import java.text.SimpleDateFormat

class VisualTopoExport(aContext: Context?) : AbstractExport(aContext) {

    val SEPARATOR = ","
    val COORDINATE_PLACEHOLDER = ",,,,LT93";
    val HEADER_DATE_FORMAT = "dd/MM/yyyy"

    val body = StringBuilder()

    init {
        mUseUniqueName = true;
        mExtension = ".tro";
    }

    override fun setValue(entityType: Entities?, aLabel: String?) {
        // TODO
    }

    override fun setValue(entityType: Entities?, aValue: Float?) {
        // TODO
    }

    override fun setPhoto(aPhoto: Photo?) {
        // TODO
    }

    override fun setLocation(aLocation: Location) {
        val utmCoordinate = UtmCoordinate(aLocation.latitude, aLocation.longitude);
        val locationEncoded = SEPARATOR + utmCoordinate.easting + SEPARATOR + utmCoordinate.northing + SEPARATOR + aLocation.altitude + SEPARATOR + "UTM"
        body.replaceFirst(Regex(COORDINATE_PLACEHOLDER), locationEncoded);
    }

    override fun getContent(): InputStream {
        return ByteArrayInputStream(body.toString().toByteArray());
    }

    override fun prepare(aProject: Project) {
        Log.i(Constants.LOG_TAG_SERVICE, "Start Visual Topo export ")
        body.clear()

        // headers
        body.appendln("Version 5.11")
        body.appendln("Verification 1")
        body.appendln()
        body.append(aProject.name)
            .appendln(COORDINATE_PLACEHOLDER)
        body.appendln("Entree A0")
        body.appendln("Couleur 255,255,255")
        body.appendln()
        // --/--/---- : survey date
        // M or A- manual declination
        body.append("Param Deca Degd Clino Degd 0.0000 Dir,Dir,Dir Inc Std ")
            .append(SimpleDateFormat(HEADER_DATE_FORMAT).format(aProject.creationDate))
            .append(" M ;Generated by CaveSurvey ")
            .append(AndroidUtil.getAppVersion())
        body.appendln(";")
        body.appendln()

        Log.i(Constants.LOG_TAG_SERVICE, "Generated body: $body")
    }

    override fun prepareEntity(rowCounter: Int) {
        // nothing really to prepare
    }

    override fun setDrawing(aSketch: Sketch?) {
        // TODO
    }
}