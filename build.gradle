buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.+'
    }
}

apply plugin: 'android'

sourceSets {
    unitTest {
        java.srcDir file('src/test/java')
        resources.srcDir file('src/test/res')
    }
}

repositories {
    mavenCentral()
}

configurations {
    unitTestCompile.extendsFrom runtime
    unitTestRuntime.extendsFrom unitTestCompile
}

dependencies {
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.j256.ormlite:ormlite-core:4.47'
    compile 'com.j256.ormlite:ormlite-android:4.47'
    compile 'org.apache.poi:poi:3.9'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-codec:commons-codec:1.7'

    unitTestCompile files("build/classes/defaultFlavor/release")
    unitTestCompile 'junit:junit:4+'
    unitTestCompile 'com.google.android:android:4.+'
}

task unitTest(type:Test, dependsOn: assemble) {
    testClassesDir = project.sourceSets.unitTest.output.classesDir
    classpath = project.sourceSets.unitTest.runtimeClasspath
}
check.dependsOn unitTest

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 15
    }

    signingConfigs {
        release {
            // We can leave these in environment variables
            storeFile file("CaveSurvey.keystore")
            keyAlias "CaveSurvey"

            // These two lines make gradle believe that the signingConfigs
            // section is complete. Without them, tasks like installRelease
            // will not be available!
            storePassword System.getenv("CaveSurveyKeystorePassword")
            keyPassword System.getenv("CaveSurveyKeyPassword")
        }
    }

    buildTypes {
        release {
            runProguard false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            signingConfig signingConfigs.release
        }
    }
    productFlavors {
        defaultFlavor {
            proguardFile 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/java']
            res.srcDirs = ['res']
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    lintOptions {
        // if true, stop the gradle build if errors are found
        abortOnError false
    }
}
